{
	"objects" : [
		"add_rownames",
		"anti_join",
		"arrange",
		"arrange_",
		"as_data_frame",
		"as.tbl",
		"as.tbl_cube",
		"base_agg",
		"base_scalar",
		"base_win",
		"bench_tbls",
		"between",
		"bind_cols",
		"bind_rows",
		"build_sql",
		"chain",
		"chain_q",
		"changes",
		"collapse",
		"collect",
		"combine",
		"compare_tbls",
		"compute",
		"copy_lahman",
		"copy_to",
		"count",
		"count_",
		"cumall",
		"cumany",
		"cume_dist",
		"cummean",
		"data_frame",
		"data_frame_",
		"db_analyze",
		"db_begin",
		"db_commit",
		"db_create_index",
		"db_create_table",
		"db_data_type",
		"db_drop_table",
		"db_explain",
		"db_has_table",
		"db_insert_into",
		"db_list_tables",
		"db_query_fields",
		"db_query_rows",
		"db_rollback",
		"db_save_query",
		"dense_rank",
		"desc",
		"dim_desc",
		"distinct",
		"distinct_",
		"do_",
		"escape",
		"eval_tbls",
		"explain",
		"failwith",
		"filter",
		"filter_",
		"first",
		"full_join",
		"funs",
		"funs_",
		"get_cluster",
		"glimpse",
		"group_by",
		"group_by_",
		"group_indices",
		"group_indices_",
		"group_size",
		"grouped_df",
		"grouped_dt",
		"groups",
		"has_cluster",
		"has_lahman",
		"ident",
		"init_cluster",
		"inner_join",
		"intersect",
		"is.grouped_df",
		"is.grouped_dt",
		"is.ident",
		"is.sql",
		"is.src",
		"is.tbl",
		"knit_print.trunc_mat",
		"lahman_df",
		"lahman_dt",
		"lahman_mysql",
		"lahman_postgres",
		"lahman_sqlite",
		"lahman_srcs",
		"last",
		"lead",
		"left_join",
		"location",
		"make_tbl",
		"min_rank",
		"mutate",
		"mutate_",
		"mutate_each",
		"mutate_each_",
		"mutate_each_q",
		"n_distinct",
		"n_groups",
		"nasa",
		"nth",
		"ntile",
		"order_by",
		"partial_eval",
		"percent_rank",
		"progress_estimated",
		"query",
		"rbind_all",
		"rbind_list",
		"regroup",
		"rename",
		"rename_",
		"rename_vars",
		"rename_vars_",
		"right_join",
		"row_number",
		"rowwise",
		"same_src",
		"sample_frac",
		"sample_n",
		"select",
		"select_",
		"select_vars",
		"select_vars_",
		"semi_join",
		"set_cluster",
		"setdiff",
		"setequal",
		"show_query",
		"slice",
		"slice_",
		"sql",
		"sql_escape_ident",
		"sql_escape_string",
		"sql_infix",
		"sql_join",
		"sql_not_supported",
		"sql_prefix",
		"sql_quote",
		"sql_select",
		"sql_semi_join",
		"sql_set_op",
		"sql_subquery",
		"sql_translator",
		"sql_variant",
		"src",
		"src_desc",
		"src_df",
		"src_dt",
		"src_local",
		"src_mysql",
		"src_postgres",
		"src_sql",
		"src_sqlite",
		"src_tbls",
		"src_translate_env",
		"stop_cluster",
		"summarise",
		"summarise_",
		"summarise_each",
		"summarise_each_",
		"summarise_each_q",
		"summarize",
		"summarize_",
		"tally",
		"tbl",
		"tbl_cube",
		"tbl_df",
		"tbl_dt",
		"tbl_sql",
		"tbl_vars",
		"temp_srcs",
		"top_n",
		"translate_sql",
		"translate_sql_q",
		"transmute",
		"transmute_",
		"trunc_mat",
		"type_sum",
		"ungroup",
		"union",
		"with_order"
	],
	"methods" : {
		"add_rownames" : "add_rownames(df, var = \"rowname\") ",
		"anti_join" : "anti_join(x, y, by = NULL, copy = FALSE, ...) ",
		"arrange" : "arrange(.data, ...) ",
		"arrange_" : "arrange_(.data, ..., .dots) ",
		"as_data_frame" : "as_data_frame(x) ",
		"as.tbl" : "as.tbl(x, ...) ",
		"as.tbl_cube" : "as.tbl_cube(x, ...) ",
		"bench_tbls" : "bench_tbls(tbls, op, ..., times = 10) ",
		"between" : "between(x, left, right) ",
		"bind_cols" : "bind_cols(x, ...) ",
		"bind_rows" : "bind_rows(x, ...) ",
		"build_sql" : "build_sql(..., .env = parent.frame(), con = NULL) ",
		"chain" : "chain(..., env = parent.frame()) ",
		"chain_q" : "chain_q(calls, env = parent.frame()) ",
		"changes" : "changes(x, y) ",
		"collapse" : "collapse(x, ...) ",
		"collect" : "collect(x, ...) ",
		"combine" : "combine(x, ...) ",
		"compare_tbls" : "compare_tbls(tbls, op, ref = NULL, compare = equal_data_frame, ...) ",
		"compute" : "compute(x, name = random_table_name(), ...) ",
		"copy_lahman" : "copy_lahman(src, ...) ",
		"copy_to" : "copy_to(dest, df, name = deparse(substitute(df)), ...) ",
		"count" : "count(x, ..., wt = NULL, sort = FALSE) ",
		"count_" : "count_(x, vars, wt = NULL, sort = FALSE) ",
		"cumall" : "cumall(x) ",
		"cumany" : "cumany(x) ",
		"cume_dist" : "cume_dist(x) ",
		"cummean" : "cummean(x) ",
		"data_frame" : "data_frame(...) ",
		"data_frame_" : "data_frame_(columns) ",
		"db_analyze" : "db_analyze(con, table, ...) ",
		"db_begin" : "db_begin(con, ...) ",
		"db_commit" : "db_commit(con, ...) ",
		"db_create_index" : "db_create_index(con, table, columns, name = NULL, ...) ",
		"db_create_table" : "db_create_table(con, table, types, temporary = FALSE, ...) ",
		"db_data_type" : "db_data_type(con, fields) ",
		"db_drop_table" : "db_drop_table(con, table, force = FALSE, ...) ",
		"db_explain" : "db_explain(con, sql, ...) ",
		"db_has_table" : "db_has_table(con, table) ",
		"db_insert_into" : "db_insert_into(con, table, values, ...) ",
		"db_list_tables" : "db_list_tables(con) ",
		"db_query_fields" : "db_query_fields(con, sql, ...) ",
		"db_query_rows" : "db_query_rows(con, sql, ...) ",
		"db_rollback" : "db_rollback(con, ...) ",
		"db_save_query" : "db_save_query(con, sql, name, temporary = TRUE, ...) ",
		"dense_rank" : "dense_rank(x) ",
		"desc" : "desc(x) ",
		"dim_desc" : "dim_desc(x) ",
		"distinct" : "distinct(.data, ...) ",
		"distinct_" : "distinct_(.data, ..., .dots) ",
		"do_" : "do_(.data, ..., .dots) ",
		"escape" : "escape(x, parens = NA, collapse = \" \", con = NULL) ",
		"eval_tbls" : "eval_tbls(tbls, op) ",
		"explain" : "explain(x, ...) ",
		"failwith" : "failwith(default = NULL, f, quiet = FALSE) ",
		"filter" : "filter(.data, ...) ",
		"filter_" : "filter_(.data, ..., .dots) ",
		"first" : "first(x, order_by = NULL, default = default_missing(x)) ",
		"full_join" : "full_join(x, y, by = NULL, copy = FALSE, ...) ",
		"funs" : "funs(...) ",
		"funs_" : "funs_(dots) ",
		"get_cluster" : "get_cluster() ",
		"glimpse" : "glimpse(tbl, width = getOption(\"width\")) ",
		"group_by" : "group_by(.data, ..., add = FALSE) ",
		"group_by_" : "group_by_(.data, ..., .dots, add = FALSE) ",
		"group_indices" : "group_indices(.data, ...) ",
		"group_indices_" : "group_indices_(.data, ..., .dots, add = FALSE) ",
		"group_size" : "group_size(x) ",
		"grouped_df" : "grouped_df(data, vars, drop = TRUE) ",
		"grouped_dt" : "grouped_dt(data, vars, copy = TRUE) ",
		"groups" : "groups(x) ",
		"has_cluster" : "has_cluster() ",
		"has_lahman" : "has_lahman(type, ...) ",
		"ident" : "ident(x) ",
		"init_cluster" : "init_cluster(cores = NA, quiet = FALSE) ",
		"inner_join" : "inner_join(x, y, by = NULL, copy = FALSE, ...) ",
		"intersect" : "intersect(x, y, ...) ",
		"is.grouped_df" : "is.grouped_df(x) ",
		"is.grouped_dt" : "is.grouped_dt(x) ",
		"is.ident" : "is.ident(x) ",
		"is.sql" : "is.sql(x) ",
		"is.src" : "is.src(x) ",
		"is.tbl" : "is.tbl(x) ",
		"knit_print.trunc_mat" : "knit_print.trunc_mat(x, options) ",
		"lahman_df" : "lahman_df() ",
		"lahman_dt" : "lahman_dt() ",
		"lahman_mysql" : "lahman_mysql(dbname = \"lahman\", ...) ",
		"lahman_postgres" : "lahman_postgres(dbname = \"lahman\", ...) ",
		"lahman_sqlite" : "lahman_sqlite(path = NULL) ",
		"lahman_srcs" : "lahman_srcs(..., quiet = NULL) ",
		"last" : "last(x, order_by = NULL, default = default_missing(x)) ",
		"lead" : "lead(x, n = 1L, default = NA, order_by = NULL, ...) ",
		"left_join" : "left_join(x, y, by = NULL, copy = FALSE, ...) ",
		"location" : "location(df) ",
		"make_tbl" : "make_tbl(subclass, ...) ",
		"min_rank" : "min_rank(x) ",
		"mutate" : "mutate(.data, ...) ",
		"mutate_" : "mutate_(.data, ..., .dots) ",
		"mutate_each" : "mutate_each(tbl, funs, ...) ",
		"mutate_each_" : "mutate_each_(tbl, funs, vars) ",
		"mutate_each_q" : "mutate_each_q(...) ",
		"n_distinct" : "n_distinct(x) ",
		"n_groups" : "n_groups(x) ",
		"nth" : "nth(x, n, order_by = NULL, default = default_missing(x)) ",
		"ntile" : "ntile(x, n) ",
		"order_by" : "order_by(order_by, call) ",
		"partial_eval" : "partial_eval(call, tbl = NULL, env = parent.frame()) ",
		"percent_rank" : "percent_rank(x) ",
		"progress_estimated" : "progress_estimated(n, min_time = 0) ",
		"query" : "query(con, sql, .vars) ",
		"rbind_all" : "rbind_all(dots) ",
		"rbind_list" : "rbind_list(...) ",
		"regroup" : "regroup(x, value) ",
		"rename" : "rename(.data, ...) ",
		"rename_" : "rename_(.data, ..., .dots) ",
		"rename_vars" : "rename_vars(vars, ...) ",
		"rename_vars_" : "rename_vars_(vars, args) ",
		"right_join" : "right_join(x, y, by = NULL, copy = FALSE, ...) ",
		"row_number" : "row_number(x) ",
		"rowwise" : "rowwise(data) ",
		"same_src" : "same_src(x, y) ",
		"sample_frac" : "sample_frac(tbl, size = 1, replace = FALSE, weight = NULL, .env = parent.frame()) ",
		"sample_n" : "sample_n(tbl, size, replace = FALSE, weight = NULL, .env = parent.frame()) ",
		"select" : "select(.data, ...) ",
		"select_" : "select_(.data, ..., .dots) ",
		"select_vars" : "select_vars(vars, ..., include = character(), exclude = character()) ",
		"select_vars_" : "select_vars_(vars, args, include = character(), exclude = character()) ",
		"semi_join" : "semi_join(x, y, by = NULL, copy = FALSE, ...) ",
		"set_cluster" : "set_cluster(x) ",
		"setdiff" : "setdiff(x, y, ...) ",
		"setequal" : "setequal(x, y, ...) ",
		"show_query" : "show_query(x) ",
		"slice" : "slice(.data, ...) ",
		"slice_" : "slice_(.data, ..., .dots) ",
		"sql" : "sql(x) ",
		"sql_escape_ident" : "sql_escape_ident(con, x) ",
		"sql_escape_string" : "sql_escape_string(con, x) ",
		"sql_infix" : "sql_infix(f) ",
		"sql_join" : "sql_join(con, x, y, type = \"inner\", by = NULL, ...) ",
		"sql_not_supported" : "sql_not_supported(f) ",
		"sql_prefix" : "sql_prefix(f, n = NULL) ",
		"sql_quote" : "sql_quote(x, quote) ",
		"sql_select" : "sql_select(con, select, from, where = NULL, group_by = NULL, having = NULL, order_by = NULL, limit = NULL, offset = NULL, ...) ",
		"sql_semi_join" : "sql_semi_join(con, x, y, anti = FALSE, by = NULL, ...) ",
		"sql_set_op" : "sql_set_op(con, x, y, method) ",
		"sql_subquery" : "sql_subquery(con, sql, name = random_table_name(), ...) ",
		"sql_translator" : "sql_translator(..., .funs = list(), .parent = new.env(parent = emptyenv())) ",
		"sql_variant" : "sql_variant(scalar = sql_translator(), aggregate = sql_translator(), window = sql_translator()) ",
		"src" : "src(subclass, ...) ",
		"src_desc" : "src_desc(x) ",
		"src_df" : "src_df(pkg = NULL, env = NULL) ",
		"src_dt" : "src_dt(pkg = NULL, env = NULL) ",
		"src_local" : "src_local(tbl, pkg = NULL, env = NULL) ",
		"src_mysql" : "src_mysql(dbname, host = NULL, port = 0L, user = \"root\", password = \"\", ...) ",
		"src_postgres" : "src_postgres(dbname = NULL, host = NULL, port = NULL, user = NULL, password = NULL, ...) ",
		"src_sql" : "src_sql(subclass, con, ...) ",
		"src_sqlite" : "src_sqlite(path, create = FALSE) ",
		"src_tbls" : "src_tbls(x) ",
		"src_translate_env" : "src_translate_env(x) ",
		"stop_cluster" : "stop_cluster() ",
		"summarise" : "summarise(.data, ...) ",
		"summarise_" : "summarise_(.data, ..., .dots) ",
		"summarise_each" : "summarise_each(tbl, funs, ...) ",
		"summarise_each_" : "summarise_each_(tbl, funs, vars) ",
		"summarise_each_q" : "summarise_each_q(...) ",
		"summarize" : "summarize(.data, ...) ",
		"summarize_" : "summarize_(.data, ..., .dots) ",
		"tally" : "tally(x, wt, sort = FALSE) ",
		"tbl" : "tbl(src, ...) ",
		"tbl_cube" : "tbl_cube(dimensions, measures) ",
		"tbl_df" : "tbl_df(data) ",
		"tbl_dt" : "tbl_dt(data, copy = TRUE) ",
		"tbl_sql" : "tbl_sql(subclass, src, from, ..., vars = attr(from, \"vars\")) ",
		"tbl_vars" : "tbl_vars(x) ",
		"temp_srcs" : "temp_srcs(..., quiet = NULL) ",
		"top_n" : "top_n(x, n, wt) ",
		"translate_sql" : "translate_sql(..., tbl = NULL, env = parent.frame(), variant = NULL, window = FALSE) ",
		"translate_sql_q" : "translate_sql_q(expr, tbl = NULL, env = parent.frame(), variant = NULL, window = FALSE) ",
		"transmute" : "transmute(.data, ...) ",
		"transmute_" : "transmute_(.data, ..., .dots) ",
		"trunc_mat" : "trunc_mat(x, n = NULL, width = NULL) ",
		"type_sum" : "type_sum(x) ",
		"ungroup" : "ungroup(x) ",
		"union" : "union(x, y, ...) ",
		"with_order" : "with_order(order_by, fun, x, ...) "
	}
}