{
	"objects" : [
		"a_ply",
		"aaply",
		"adply",
		"alply",
		"amv_dimnames",
		"arrange",
		"as.quoted",
		"baseball",
		"catcolwise",
		"colwise",
		"compact",
		"count",
		"create_progress_bar",
		"d_ply",
		"daply",
		"ddply",
		"defaults",
		"desc",
		"dlply",
		"each",
		"empty",
		"eval.quoted",
		"failwith",
		"here",
		"idata.frame",
		"is.discrete",
		"is.formula",
		"is.quoted",
		"join",
		"join_all",
		"join.keys",
		"l_ply",
		"laply",
		"ldply",
		"liply",
		"llply",
		"m_ply",
		"maply",
		"mapvalues",
		"match_df",
		"mdply",
		"mlply",
		"mutate",
		"name_rows",
		"numcolwise",
		"ozone",
		"progress_none",
		"progress_text",
		"progress_time",
		"progress_tk",
		"progress_win",
		"quickdf",
		"r_ply",
		"raply",
		"rdply",
		"rename",
		"revalue",
		"rlply",
		"round_any",
		"splat",
		"split_indices",
		"split_labels",
		"strip_splits",
		"summarise",
		"summarize",
		"take",
		"true",
		"try_default",
		"tryapply",
		"unrowname",
		"vaggregate"
	],
	"methods" : {
		"a_ply" : "a_ply(.data, .margins, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .print = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"aaply" : "aaply(.data, .margins, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"adply" : "adply(.data, .margins, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"alply" : "alply(.data, .margins, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .dims = FALSE) ",
		"amv_dimnames" : "amv_dimnames(x) ",
		"arrange" : "arrange(df, ...) ",
		"as.quoted" : "as.quoted(x, env = parent.frame()) ",
		"catcolwise" : "catcolwise(.fun, ...) ",
		"colwise" : "colwise(.fun, .cols = true, ...) ",
		"compact" : "compact(l) ",
		"count" : "count(df, vars = NULL, wt_var = NULL) ",
		"create_progress_bar" : "create_progress_bar(name = \"none\", ...) ",
		"d_ply" : "d_ply(.data, .variables, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .drop = TRUE, .print = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"daply" : "daply(.data, .variables, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .drop_i = TRUE, .drop_o = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"ddply" : "ddply(.data, .variables, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"defaults" : "defaults(x, y) ",
		"desc" : "desc(x) ",
		"dlply" : "dlply(.data, .variables, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"each" : "each(...) ",
		"empty" : "empty(df) ",
		"eval.quoted" : "eval.quoted(exprs, envir = NULL, enclos = NULL, try = FALSE) ",
		"failwith" : "failwith(default = NULL, f, quiet = FALSE) ",
		"here" : "here(f) ",
		"idata.frame" : "idata.frame(df) ",
		"is.discrete" : "is.discrete(x) ",
		"is.formula" : "is.formula(x) ",
		"is.quoted" : "is.quoted(x) ",
		"join" : "join(x, y, by = NULL, type = \"left\", match = \"all\") ",
		"join_all" : "join_all(dfs, by = NULL, type = \"left\", match = \"all\") ",
		"join.keys" : "join.keys(x, y, by) ",
		"l_ply" : "l_ply(.data, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .print = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"laply" : "laply(.data, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"ldply" : "ldply(.data, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA) ",
		"liply" : "liply(.iterator, .fun = NULL, ...) ",
		"llply" : "llply(.data, .fun = NULL, ..., .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"m_ply" : "m_ply(.data, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .print = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"maply" : "maply(.data, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL) ",
		"mapvalues" : "mapvalues(x, from, to, warn_missing = TRUE) ",
		"match_df" : "match_df(x, y, on = NULL) ",
		"mdply" : "mdply(.data, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"mlply" : "mlply(.data, .fun = NULL, ..., .expand = TRUE, .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL) ",
		"mutate" : "mutate(.data, ...) ",
		"name_rows" : "name_rows(df) ",
		"numcolwise" : "numcolwise(.fun, ...) ",
		"progress_none" : "progress_none() ",
		"progress_text" : "progress_text(style = 3, ...) ",
		"progress_time" : "progress_time() ",
		"progress_tk" : "progress_tk(title = \"plyr progress\", label = \"Working...\", ...) ",
		"progress_win" : "progress_win(title = \"plyr progress\", ...) ",
		"quickdf" : "quickdf(list) ",
		"r_ply" : "r_ply(.n, .expr, .progress = \"none\", .print = FALSE) ",
		"raply" : "raply(.n, .expr, .progress = \"none\", .drop = TRUE) ",
		"rbind.fill" : "rbind.fill(...) ",
		"rbind.fill.matrix" : "rbind.fill.matrix(...) ",
		"rdply" : "rdply(.n, .expr, .progress = \"none\", .id = NA) ",
		"rename" : "rename(x, replace, warn_missing = TRUE) ",
		"revalue" : "revalue(x, replace = NULL, warn_missing = TRUE) ",
		"rlply" : "rlply(.n, .expr, .progress = \"none\") ",
		"round_any" : "round_any(x, accuracy, f = round) ",
		"splat" : "splat(flat) ",
		"split_indices" : "split_indices(group, n = 0L) ",
		"split_labels" : "split_labels(splits, drop, id = plyr::id(splits, drop = TRUE)) ",
		"strip_splits" : "strip_splits(df) ",
		"summarise" : "summarise(.data, ...) ",
		"summarize" : "summarize(.data, ...) ",
		"take" : "take(x, along, indices, drop = FALSE) ",
		"true" : "true(...) ",
		"try_default" : "try_default(expr, default, quiet = FALSE) ",
		"tryapply" : "tryapply(list, fun, ...) ",
		"unrowname" : "unrowname(x) ",
		"vaggregate" : "vaggregate(.value, .group, .fun, ..., .default = NULL, .n = nlevels(.group)) "
	}
}