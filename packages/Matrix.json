{
	"objects" : [
		"abIseq",
		"all.equal",
		"anyDuplicatedT",
		"Arith",
		"as.array",
		"as.matrix",
		"as.vector",
		"band",
		"bandSparse",
		"bdiag",
		"BunchKaufman",
		"cBind",
		"chol",
		"Cholesky",
		"coerce",
		"colMeans",
		"colSums",
		"Compare",
		"condest",
		"crossprod",
		"det",
		"determinant",
		"diag",
		"Diagonal",
		"diff",
		"drop",
		"expand",
		"expm",
		"facmul",
		"forceSymmetric",
		"format",
		"formatSparseM",
		"formatSpMatrix",
		"head",
		"Hilbert",
		"image",
		"invPerm",
		"is.null.DN",
		"isDiagonal",
		"isLDL",
		"isSymmetric",
		"isTriangular",
		"KhatriRao",
		"kronecker",
		"Logic",
		"Math",
		"Matrix",
		"mean",
		"nearPD",
		"nnzero",
		"norm",
		"onenormest",
		"Ops",
		"pack",
		"print",
		"printSpMatrix",
		"qr.coef",
		"qr.fitted",
		"qr.Q",
		"qr.qty",
		"qr.qy",
		"qr.R",
		"qr.resid",
		"qrR",
		"rankMatrix",
		"rBind",
		"rcond",
		"readHB",
		"readMM",
		"rowMeans",
		"rowSums",
		"rsparsematrix",
		"Schur",
		"show",
		"skewpart",
		"solve",
		"sparse.model.matrix",
		"sparseMatrix",
		"sparseVector",
		"spMatrix",
		"summary",
		"Summary",
		"symmpart",
		"tail",
		"tcrossprod",
		"toeplitz",
		"tril",
		"triu",
		"uniqTsparse",
		"unname",
		"unpack",
		"update",
		"updown",
		"which",
		"writeMM",
		"zapsmall"
	],
	"methods" : {
		"abIseq" : "abIseq(from = 1, to = 1, by = ((to - from)/(length.out - 1)), length.out = NULL, along.with = NULL) ",
		"all.equal" : "all.equal(target, current, ...) ",
		"anyDuplicatedT" : "anyDuplicatedT(x, di = dim(x)) ",
		"Arith" : "Arith(e1, e2) ",
		"as.array" : "as.array(x, ...) ",
		"as.matrix" : "as.matrix(x, ...) ",
		"as.vector" : "as.vector(x, mode = \"any\") ",
		"band" : "band(x, k1, k2, ...) ",
		"bandSparse" : "bandSparse(n, m = n, k, diagonals, symmetric = FALSE, giveCsparse = TRUE) ",
		"bdiag" : "bdiag(...) ",
		"BunchKaufman" : "BunchKaufman(x, ...) ",
		"cBind" : "cBind(..., deparse.level = 1) ",
		"chol" : "chol(x, ...) ",
		"Cholesky" : "Cholesky(A, perm = TRUE, LDL = !super, super = FALSE, Imult = 0, ...) ",
		"coerce" : "coerce(from, to, strict = TRUE) ",
		"colMeans" : "colMeans(x, na.rm = FALSE, dims = 1, ...) ",
		"colSums" : "colSums(x, na.rm = FALSE, dims = 1, ...) ",
		"Compare" : "Compare(e1, e2) ",
		"condest" : "condest(A, t = min(n, 5), normA = norm(A, \"1\"), silent = FALSE, quiet = TRUE) ",
		"crossprod" : "crossprod(x, y = NULL, ...) ",
		"det" : "det(x, ...) ",
		"determinant" : "determinant(x, logarithm = TRUE, ...) ",
		"diag" : "diag(x = 1, nrow, ncol) ",
		"Diagonal" : "Diagonal(n, x = NULL) ",
		"diff" : "diff(x, ...) ",
		"drop" : "drop(x) ",
		"expand" : "expand(x, ...) ",
		"expm" : "expm(x) ",
		"facmul" : "facmul(x, factor, y, transpose, left, ...) ",
		"forceSymmetric" : "forceSymmetric(x, uplo) ",
		"format" : "format(x, ...) ",
		"formatSparseM" : "formatSparseM(x, zero.print = \".\", align = c(\"fancy\", \"right\"), m = as(x, \"matrix\"), asLogical = NULL, digits = NULL, cx, iN0, dn = dimnames(m)) ",
		"formatSpMatrix" : "formatSpMatrix(x, digits = NULL, maxp = 1e+09, cld = getClassDef(class(x)), zero.print = \".\", col.names, note.dropping.colnames = TRUE, align = c(\"fancy\", \"right\")) ",
		"head" : "head(x, ...) ",
		"Hilbert" : "Hilbert(n) ",
		"image" : "image(x, ...) ",
		"invPerm" : "invPerm(p, zero.p = FALSE, zero.res = FALSE) ",
		"is.null.DN" : "is.null.DN(dn) ",
		"isDiagonal" : "isDiagonal(object) ",
		"isLDL" : "isLDL(x) ",
		"isSymmetric" : "isSymmetric(object, ...) ",
		"isTriangular" : "isTriangular(object, upper = NA, ...) ",
		"KhatriRao" : "KhatriRao(X, Y = X, FUN = \"*\", make.dimnames = FALSE) ",
		"kronecker" : "kronecker(X, Y, FUN = \"*\", make.dimnames = FALSE, ...) ",
		"Logic" : "Logic(e1, e2) ",
		"Math" : "Math(x) ",
		"Matrix" : "Matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL, sparse = NULL, doDiag = TRUE, forceCheck = FALSE) ",
		"mean" : "mean(x, ...) ",
		"nearPD" : "nearPD(x, corr = FALSE, keepDiag = FALSE, do2eigen = TRUE, doSym = FALSE, doDykstra = TRUE, only.values = FALSE, ensureSymmetry = !isSymmetric(x), eig.tol = 1e-06, conv.tol = 1e-07, posd.tol = 1e-08, maxit = 100, conv.norm.type = \"I\", trace = FALSE) ",
		"nnzero" : "nnzero(x, na.counted = NA) ",
		"norm" : "norm(x, type, ...) ",
		"onenormest" : "onenormest(A, t = min(n, 5), A.x, At.x, n, silent = FALSE, quiet = silent, iter.max = 10, eps = 4 * .Machine$double.eps) ",
		"Ops" : "Ops(e1, e2) ",
		"pack" : "pack(x, ...) ",
		"print" : "print(x, ...) ",
		"printSpMatrix" : "printSpMatrix(x, digits = NULL, maxp = getOption(\"max.print\"), cld = getClassDef(class(x)), zero.print = \".\", col.names, note.dropping.colnames = TRUE, col.trailer = \"\", align = c(\"fancy\", \"right\")) ",
		"qr.coef" : "qr.coef(qr, y) ",
		"qr.fitted" : "qr.fitted(qr, y, k = qr$rank) ",
		"qr.Q" : "qr.Q(qr, complete = FALSE, Dvec) ",
		"qr.qty" : "qr.qty(qr, y) ",
		"qr.qy" : "qr.qy(qr, y) ",
		"qr.R" : "qr.R(qr, complete = FALSE, ...) ",
		"qr.resid" : "qr.resid(qr, y) ",
		"qrR" : "qrR(qr, complete = FALSE, backPermute = TRUE) ",
		"rankMatrix" : "rankMatrix(x, tol = NULL, method = c(\"tolNorm2\", \"qr.R\", \"qrLINPACK\", \"qr\", \"useGrad\", \"maybeGrad\"), sval = svd(x, 0, 0)$d, warn.t = TRUE) ",
		"rBind" : "rBind(..., deparse.level = 1) ",
		"rcond" : "rcond(x, norm, ...) ",
		"readHB" : "readHB(file) ",
		"readMM" : "readMM(file) ",
		"rowMeans" : "rowMeans(x, na.rm = FALSE, dims = 1, ...) ",
		"rowSums" : "rowSums(x, na.rm = FALSE, dims = 1, ...) ",
		"rsparsematrix" : "rsparsematrix(nrow, ncol, density, nnz = round(density * maxE), symmetric = FALSE, rand.x = function(n) signif(rnorm(nnz), 2), ...) ",
		"Schur" : "Schur(x, vectors, ...) ",
		"show" : "show(object) ",
		"skewpart" : "skewpart(x) ",
		"solve" : "solve(a, b, ...) ",
		"sparse.model.matrix" : "sparse.model.matrix(object, data = environment(object), contrasts.arg = NULL, xlev = NULL, transpose = FALSE, drop.unused.levels = FALSE, row.names = TRUE, verbose = FALSE, ...) ",
		"sparseMatrix" : "sparseMatrix(i = ep, j = ep, p, x, dims, dimnames, symmetric = FALSE, index1 = TRUE, giveCsparse = TRUE, check = TRUE, use.last.ij = FALSE) ",
		"sparseVector" : "sparseVector(x, i, length) ",
		"spMatrix" : "spMatrix(nrow, ncol, i = integer(), j = integer(), x = numeric()) ",
		"summary" : "summary(object, ...) ",
		"Summary" : "Summary(x, ..., na.rm = FALSE) ",
		"symmpart" : "symmpart(x) ",
		"tail" : "tail(x, ...) ",
		"tcrossprod" : "tcrossprod(x, y = NULL, ...) ",
		"toeplitz" : "toeplitz(x, ...) ",
		"tril" : "tril(x, k = 0, ...) ",
		"triu" : "triu(x, k = 0, ...) ",
		"uniqTsparse" : "uniqTsparse(x, class.x = c(class(x))) ",
		"unname" : "unname(obj, force = FALSE) ",
		"unpack" : "unpack(x, ...) ",
		"update" : "update(object, ...) ",
		"updown" : "updown(update, C, L) ",
		"which" : "which(x, arr.ind = FALSE, useNames = TRUE) ",
		"writeMM" : "writeMM(obj, file, ...) ",
		"zapsmall" : "zapsmall(x, digits = getOption(\"digits\")) "
	}
}